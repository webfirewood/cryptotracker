{"version":3,"sources":["api.ts","atoms.ts","routes/Conins.tsx","routes/Price.tsx","routes/Chart.tsx","routes/Coin.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","a","fetch","then","response","json","fetchCoinTickers","coinId","isDarkAtom","atom","key","default","Container","styled","div","Header","header","CoinsList","li","Coin","h1","props","theme","cardBgColor","textColor","accentColor","Title","Loader","Img","img","Coins","setDarkAtom","useSetRecoilState","useQuery","isLoading","data","console","log","Helmet","onClick","prev","slice","map","coin","to","id","state","name","src","symbol","toLowerCase","PriceWrapper","PriceItem","Price","useParams","quotes","USD","ath_price","percent_change_7d","percent_change_30m","Chart","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","isDark","useRecoilValue","useState","priceArray","setPriceArray","tempArray","useEffect","forEach","item","push","x","time_close","y","open","high","low","close","type","series","options","chart","height","mode","tooltip","enabled","show","format","formatter","undefined","title","seriesName","fixed","text","align","xaxis","labels","rotate","rotateAlways","hideOverlappingLabels","showDuplicates","trim","minHeight","maxHeight","style","fontSize","yaxis","minWidth","maxWidth","fontFamily","fontWeight","cssClass","offsetX","offsetY","value","toFixed","Overview","OverviewItem","Description","p","Tabs","Tab","span","isActive","useLocation","priceMatch","useMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","tickersLoading","tickersData","loading","rank","price","description","total_supply","max_supply","path","element","Router","basename","darkTheme","bgColor","lightTheme","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.5912897c.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport async function fetchCoins() {\n    return fetch(`${BASE_URL}/coins`).then(response =>response.json());\n\n}\n\nexport function fetchCoinInfo(coinId:string | undefined) {\n    return fetch(`${BASE_URL}/coins/${coinId}`).then(response =>response.json());\n}\n\nexport function fetchCoinTickers(coinId:string | undefined) {\n    return fetch(`${BASE_URL}/tickers/${coinId}`).then(response =>response.json());\n}\n\nexport function fetchCoinHistory(coinId: string | undefined) {\n    const endDate = Math.floor(Date.now() / 1000);\n    const startDate = endDate - 60*60*24*7*2;\n    return fetch(`${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`).then(response =>response.json());\n}","import {atom} from \"recoil\";\n\nexport const isDarkAtom = atom({\n    key:\"isDark\",\n    default: false,\n});\n","import styled from \"styled-components\";\nimport {Link} from \"react-router-dom\";\nimport {useQuery} from \"react-query\";\nimport {fetchCoins} from \"../api\";\nimport {Helmet} from \"react-helmet\";\nimport {useSetRecoilState} from \"recoil\";\nimport {isDarkAtom} from \"../atoms\";\n\nconst Container = styled.div`\npadding: 0px 20px;\nmax-width: 480px;\n  margin: 0 auto;\n\n`;\n\n\nconst Header = styled.header`\nheight: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.li``;\n\nconst Coin = styled.h1`\nbackground-color: ${props => props.theme.cardBgColor};\ncolor:${props => props.theme.textColor};\n  padding: 20px;\n  border-radius: 15px;\n  margin-bottom: 10px;\n  border: 1px solid white;\n  a {\n    display: flex;\n    align-items: center;\n    transition: color .2s ease-in;\n  }\n  &:hover{\n    a {\n      color:${props => props.theme.accentColor}\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\ncolor:${props => props.theme.accentColor}\n`;\n\nconst Loader = styled.div`\ntext-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n    width: 35px;\n  height: 35px;\n  margin-right: 10px;\n\n`;\n\ninterface ICoin {\n    id: string,\n    name: string,\n    symbol: string,\n    rank: number,\n    is_new: boolean,\n    is_active: boolean,\n    type: string\n}\n\n\nfunction Coins() {\n    const setDarkAtom = useSetRecoilState(isDarkAtom);\n    const toggleDarkAtom = () => setDarkAtom((prev) => !prev)\n    const {isLoading, data} = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n    console.log(data)\n    return (\n        <Container>\n            <Helmet>\n                <title>코인</title>\n            </Helmet>\n            <Header>\n                <Title>코인</Title>\n                <button onClick={toggleDarkAtom}>Toggle Mode</button>\n            </Header>\n            {isLoading ? <Loader>Loading...</Loader> : <CoinsList>\n                {data?.slice(0, 100).map(coin => <Coin key={coin.id}>\n                    <Link to={`/${coin.id}`} state={{name: coin.name}}>\n                    <Img src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`} />\n                    {coin.name} &rarr;</Link></Coin>)}\n            </CoinsList>}\n\n        </Container>\n    )\n}\n\nexport default Coins;","import {useQuery} from \"react-query\";\nimport {useParams} from \"react-router-dom\";\nimport {fetchCoinTickers} from \"../api\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst PriceWrapper = styled.div`\ndisplay: flex;\n  flex-direction: column;\n`;\n\nconst PriceItem = styled.div`\n  background-color: ${props => props.theme.cardBgColor};\n  border-radius: 15px;\n  padding-left: 10px;\n  padding-top: 10px;\n  height: 30px;\n  width: 100%;\n  margin-top: 20px;\n  color: ${props => props.theme.textColor};\n  span {\n    align-items: center;\n    justify-content: center;\n    margin: 0 auto;\n  }\n  \n \n\n`;\n\ninterface PriceData {\n    id: string;\n    name: string;\n    symbol: string;\n    rank: number;\n    circulating_supply: number;\n    total_supply: number;\n    max_supply: number;\n    beta_value: number;\n    first_data_at: string;\n    last_updated: string;\n    quotes: {\n        USD: {\n            ath_date: string;\n            ath_price: number;\n            market_cap: number;\n            market_cap_change_24h: number;\n            percent_change_1h: number;\n            percent_change_1y: number;\n            percent_change_6h: number;\n            percent_change_7d: number;\n            percent_change_12h: number;\n            percent_change_15m: number;\n            percent_change_24h: number;\n            percent_change_30d: number;\n            percent_change_30m: number;\n            percent_from_price_ath: number;\n            price: number;\n            volume_24h: number;\n            volume_24h_change_24h: number;\n        };\n    };\n}\n\nfunction Price() {\n    const { coinId } = useParams<{coinId: string}>();\n    const {isLoading, data} = useQuery<PriceData>([\"tickers\", coinId], () => fetchCoinTickers(coinId));\n    return (\n        <Container>\n            {isLoading ? \"Loading...\" :\n                <PriceWrapper>\n                    <PriceItem>\n                        <span>Price : </span>\n                        <span>{data?.quotes.USD.ath_price}</span>\n                    </PriceItem>\n                    <PriceItem>\n                        <span>percent_change_7d : </span>\n                        <span>{data?.quotes.USD.percent_change_7d}</span>\n                    </PriceItem>\n                    <PriceItem>\n                        <span>percent_change_30m : </span>\n                        <span>{data?.quotes.USD.percent_change_30m}</span>\n                    </PriceItem>\n                </PriceWrapper>\n\n\n            }\n        </Container>\n    )\n}\n\nexport default Price;","import {useQuery} from \"react-query\";\nimport {fetchCoinHistory} from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport {useEffect, useState} from \"react\";\nimport {useRecoilValue} from \"recoil\";\nimport {isDarkAtom} from \"../atoms\";\n\ninterface IHistorical {\n    time_open: string;\n    time_close: string;\n    open: number;\n    high: number;\n    low: number;\n    close: number;\n    volume: number;\n    market_cap: number;\n}\n\ninterface ChartProps {\n    coinId?: string;\n}\n\ninterface IPrice {\n    x: string,\n    y: object,\n}\n\nfunction Chart({coinId} : ChartProps) {\n    const {isLoading, data} = useQuery<IHistorical[]>([\"ohlcv\", coinId], () => fetchCoinHistory(coinId)\n    );\n    const isDark = useRecoilValue(isDarkAtom);\n    const [priceArray, setPriceArray] = useState<IPrice[]>([]);\n    const tempArray: IPrice[] = [];\n    useEffect(() => {\n        data?.forEach(item => {\n            tempArray.push(\n                {\n                    x: item.time_close,\n                    y: [item.open, item.high, item.low, item.close],\n                }\n            )\n        });\n        setPriceArray(tempArray);\n    }, [data]);\n\n    return <div>{isLoading ? \"Loading chart...\" :\n        <ApexChart\n            type=\"candlestick\"\n            series={[{\n                data: priceArray\n            }]}\n            options={{\n                chart: {\n                    height: 350\n                },\n                theme: {\n                  mode: isDark ? \"light\" : \"dark\"\n                },\n                tooltip: {\n                    enabled: false,\n                    x: {\n                        show: false,\n                        format: 'dd MMM',\n                        formatter: undefined,\n                    },\n                    y: {\n                        formatter: undefined,\n                        title: {\n                            formatter: (seriesName) => seriesName,\n                        },\n                    },\n                    fixed: {\n                        enabled: false\n                    }\n                },\n                title: {\n                    text: 'CandleStick Chart',\n                    align: 'left'\n                },\n                xaxis: {\n                    type: 'datetime',\n                    labels: {\n                        show: true,\n                        rotate: -45,\n                        rotateAlways: false,\n                        hideOverlappingLabels: true,\n                        showDuplicates: false,\n                        trim: false,\n                        minHeight: undefined,\n                        maxHeight: 120,\n                        style: {\n                            fontSize: '12px',\n                        },\n                    },\n                },\n                yaxis: {\n                    tooltip: {\n                        enabled: false\n                    },\n                    labels: {\n                        show: true,\n                        align: 'right',\n                        minWidth: 0,\n                        maxWidth: 160,\n                        style: {\n                            fontSize: '12px',\n                            fontFamily: 'Helvetica, Arial, sans-serif',\n                            fontWeight: 400,\n                            cssClass: 'apexcharts-yaxis-label',\n                        },\n                        offsetX: 0,\n                        offsetY: 0,\n                        rotate: 0,\n                        formatter: (value) => { return value.toFixed(2) },\n                    },\n                },\n            }}\n\n        />\n    }</div>\n}\n\nexport default Chart;\n","import {Link, Route, Routes, useLocation, useMatch, useParams} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Price from \"./Price\";\nimport Chart from \"./Chart\";\nimport {useQuery} from \"react-query\";\nimport {fetchCoinInfo, fetchCoinTickers} from \"../api\";\nimport {Helmet} from \"react-helmet\";\n\nconst Title = styled.h1`\n  font-size: 48px;\n  margin: 0 auto;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.div`\ntext-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  div:first-child {\n    margin-right: auto;\n  }\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: ${props => props.theme.cardBgColor};\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${props => props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n  }\n`;\ninterface InfoData {\n    id: string;\n    name: string;\n    symbol: string;\n    rank: number;\n    is_new: boolean;\n    is_active: boolean;\n    type: string;\n    description: string;\n    message: string;\n    open_source: boolean;\n    development_status: string;\n    hardware_wallet: boolean;\n    proof_type: string;\n    org_structure: string;\n    hash_algorithm: string;\n    started_at: string; //ㅇㅇ\n    first_data_at: string; //\n    last_data_at: string; //\n}\ninterface PriceData {\n    id: string;\n    name: string;\n    symbol: string;\n    rank: number;\n    circulating_supply: number;\n    total_supply: number;\n    max_supply: number;\n    beta_value: number;\n    first_data_at: string;\n    last_updated: string;\n    quotes: {\n        USD: {\n            ath_date: string;\n            ath_price: number;\n            market_cap: number;\n            market_cap_change_24h: number;\n            percent_change_1h: number;\n            percent_change_1y: number;\n            percent_change_6h: number;\n            percent_change_7d: number;\n            percent_change_12h: number;\n            percent_change_15m: number;\n            percent_change_24h: number;\n            percent_change_30d: number;\n            percent_change_30m: number;\n            percent_from_price_ath: number;\n            price: number;\n            volume_24h: number;\n            volume_24h_change_24h: number;\n        };\n    };\n}\n\nfunction Coin() {\n    const { coinId } = useParams<{coinId: string}>();\n    const { state } = useLocation();\n    const priceMatch = useMatch('/:coinId/price');\n    const chartMatch = useMatch('/:coinId/chart');\n    const {isLoading: infoLoading, data: infoData} = useQuery<InfoData>([\"info\",coinId], () => fetchCoinInfo(coinId));\n    const {isLoading: tickersLoading, data: tickersData} = useQuery<PriceData>([\"tickers\",coinId], () => fetchCoinTickers(coinId),\n   )\n    const loading = infoLoading || tickersLoading;\n    return (\n        <Container>\n            <Helmet>\n                <title>{state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}</title>\n            </Helmet>\n            <Header>\n                <Link to={'/'}>\n                    이전\n                </Link>\n                <Title>\n                    {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n                </Title>\n            </Header>\n            {loading ? <Loader>Loading...</Loader> : <div>\n                <Overview>\n                    <OverviewItem>\n                        <span>RANK:</span>\n                        <span>{infoData?.rank}</span>\n                    </OverviewItem>\n                    <OverviewItem>\n                        <span>SYMBOL:</span>\n                        <span>{infoData?.symbol}</span>\n                    </OverviewItem>\n                    <OverviewItem>\n                        <span>Price</span>\n                        <span>{tickersData?.quotes?.USD?.price}</span>\n                    </OverviewItem>\n                </Overview>\n                <Description>\n                    {infoData?.description}\n                </Description>\n                <Overview>\n                    <OverviewItem>TOTAL SUPPLY:\n                        <span>{tickersData?.total_supply}</span>\n                    </OverviewItem>\n                    <OverviewItem>MAX SUPPLY:\n                        <span>{tickersData?.max_supply}</span>\n                    </OverviewItem>\n                </Overview>\n\n                <Tabs>\n                    <Tab isActive={chartMatch !== null}>\n                        <Link to={`/${coinId}/chart`}>\n                            Chart\n                        </Link>\n                    </Tab>\n                    <Tab isActive={priceMatch !== null}>\n                        <Link to={`/${coinId}/price`}>\n                            price\n                        </Link>\n                    </Tab>\n                </Tabs>\n\n\n\n                <Routes>\n                    <Route path=\"chart\" element={<Chart coinId={coinId} />}/>\n                    <Route path=\"price\" element={<Price />}/>\n                </Routes>\n\n            </div>}\n\n        </Container>\n    )\n}\n\nexport default Coin;","import {BrowserRouter, Route, Routes} from \"react-router-dom\";\nimport Coins from \"./routes/Conins\";\nimport Coin from \"./routes/Coin\";\n\nfunction Router() {\n    return <BrowserRouter basename=\"/cryptotracker\">\n        <Routes>\n            <Route path=\"/\" element={<Coins />}/>\n            <Route path=\"/:coinId/*\" element={<Coin />}/>\n        </Routes>\n    </BrowserRouter>\n}\n\nexport default Router;","import {DefaultTheme} from \"styled-components\";\n\nexport const darkTheme:DefaultTheme = {\n    bgColor: \"#2f3640\",\n    textColor: \"white\",\n    accentColor: \"#9c88ff\",\n    cardBgColor: \"transparent\",\n}\n\nexport const lightTheme:DefaultTheme = {\n    bgColor: \"whitesmoke\",\n    textColor: \"black\",\n    accentColor: \"#9c88ff\",\n    cardBgColor: \"white\",\n}","import Router from \"./Router\";\nimport {createGlobalStyle, ThemeProvider} from \"styled-components\";\nimport {ReactQueryDevtools} from \"react-query/devtools\";\nimport {darkTheme, lightTheme} from \"./theme\";\nimport {useRecoilValue} from \"recoil\";\nimport {isDarkAtom} from \"./atoms\";\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\n\n  /* http://meyerweb.com/eric/tools/css/reset/\n     v5.0.1 | 20191019\n     License: none (public domain)\n  */\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, menu, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  main, menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure,\n  footer, header, hgroup, main, menu, nav, section {\n    display: block;\n  }\n  /* HTML5 hidden-attribute fix for newer browsers */\n  *[hidden] {\n      display: none;\n  }\n  body {\n    line-height: 1;\n  }\n  menu, ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-family: 'Source Sans Pro', sans-serif;\n    background-color: ${props => props.theme.bgColor};\n    color:${props => props.theme.textColor};\n  }\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n`\n\nfunction App() {\n    const isDark = useRecoilValue(isDarkAtom);\n  return (\n      <>\n          <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n              <GlobalStyle />\n              <Router />\n              <ReactQueryDevtools initialIsOpen={true} />\n          </ThemeProvider>\n\n      </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {QueryClient, QueryClientProvider} from \"react-query\";\nimport {RecoilRoot} from \"recoil\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n      <RecoilRoot>\n          <QueryClientProvider client={queryClient}>\n              <App />\n          </QueryClientProvider>\n      </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}