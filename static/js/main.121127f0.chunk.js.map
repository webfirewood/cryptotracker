{"version":3,"sources":["api.ts","routes/Conins.tsx","routes/Price.tsx","routes/Chart.tsx","routes/Coin.tsx","Router.tsx","App.tsx","index.tsx","theme.ts"],"names":["BASE_URL","fetchCoins","a","fetch","then","response","json","fetchCoinTickers","coinId","Container","styled","div","Header","header","CoinsList","li","Coin","h1","props","theme","bgColor","accentColor","Title","Loader","Img","img","Coins","useQuery","isLoading","data","Helmet","slice","map","coin","to","id","state","name","src","symbol","toLowerCase","PriceWrapper","PriceItem","Price","useParams","quotes","USD","ath_price","percent_change_7d","percent_change_30m","Chart","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","priceArray","forEach","item","push","x","time_close","y","open","high","low","close","console","log","type","series","options","chart","height","tooltip","enabled","show","format","formatter","undefined","title","seriesName","fixed","text","align","xaxis","labels","rotate","rotateAlways","hideOverlappingLabels","showDuplicates","trim","minHeight","maxHeight","style","colors","fontSize","yaxis","minWidth","maxWidth","fontFamily","fontWeight","cssClass","offsetX","offsetY","value","toFixed","axisBorder","color","Overview","OverviewItem","Description","p","Tabs","Tab","span","isActive","textColor","useLocation","priceMatch","useMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","tickersLoading","tickersData","loading","rank","price","description","total_supply","max_supply","path","element","Router","basename","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.121127f0.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport async function fetchCoins() {\n    return fetch(`${BASE_URL}/coins`).then(response =>response.json());\n\n}\n\nexport function fetchCoinInfo(coinId:string | undefined) {\n    return fetch(`${BASE_URL}/coins/${coinId}`).then(response =>response.json());\n}\n\nexport function fetchCoinTickers(coinId:string | undefined) {\n    return fetch(`${BASE_URL}/tickers/${coinId}`).then(response =>response.json());\n}\n\nexport function fetchCoinHistory(coinId: string | undefined) {\n    const endDate = Math.floor(Date.now() / 1000);\n    const startDate = endDate - 60*60*24*7*2;\n    return fetch(`${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`).then(response =>response.json());\n}","import styled from \"styled-components\";\nimport {Link} from \"react-router-dom\";\nimport {useEffect, useState} from \"react\";\nimport {useQuery} from \"react-query\";\nimport {fetchCoins} from \"../api\";\nimport {Helmet} from \"react-helmet\";\n\nconst Container = styled.div`\npadding: 0px 20px;\nmax-width: 480px;\n  margin: 0 auto;\n\n`;\n\n\nconst Header = styled.header`\nheight: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.li``;\n\nconst Coin = styled.h1`\nbackground-color: white;\ncolor:${props => props.theme.bgColor};\n  padding: 20px;\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    align-items: center;\n    transition: color .2s ease-in;\n  }\n  &:hover{\n    a {\n      color:${props => props.theme.accentColor}\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\ncolor:${props => props.theme.accentColor}\n`;\n\nconst Loader = styled.div`\ntext-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n    width: 35px;\n  height: 35px;\n  margin-right: 10px;\n\n`;\n\ninterface ICoin {\n    id: string,\n    name: string,\n    symbol: string,\n    rank: number,\n    is_new: boolean,\n    is_active: boolean,\n    type: string\n}\n\nfunction Coins() {\n    const {isLoading, data} = useQuery<ICoin[]>(\"allCoins\", fetchCoins)\n    return (\n        <Container>\n            <Helmet>\n                <title>코인</title>\n            </Helmet>\n            <Header>\n                <Title>코인</Title>\n            </Header>\n            {isLoading ? <Loader>Loading...</Loader> : <CoinsList>\n                {data?.slice(0, 100).map(coin => <Coin key={coin.id}>\n                    <Link to={`/${coin.id}`} state={{name: coin.name}}>\n                    <Img src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`} />\n                    {coin.name} &rarr;</Link></Coin>)}\n            </CoinsList>}\n\n        </Container>\n    )\n}\n\nexport default Coins;","import {useQuery} from \"react-query\";\nimport {useParams} from \"react-router-dom\";\nimport {fetchCoinTickers} from \"../api\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst PriceWrapper = styled.div`\ndisplay: flex;\n  flex-direction: column;\n`;\n\nconst PriceItem = styled.div`\n  background-color: black;\n  border-radius: 15px;\n  padding-left: 10px;\n  padding-top: 10px;\n  height: 30px;\n  width: 100%;\n  margin-top: 20px;\n  color: whitesmoke;;\n  span {\n    align-items: center;\n    justify-content: center;\n    margin: 0 auto;\n  }\n  \n \n\n`;\n\ninterface PriceData {\n    id: string;\n    name: string;\n    symbol: string;\n    rank: number;\n    circulating_supply: number;\n    total_supply: number;\n    max_supply: number;\n    beta_value: number;\n    first_data_at: string;\n    last_updated: string;\n    quotes: {\n        USD: {\n            ath_date: string;\n            ath_price: number;\n            market_cap: number;\n            market_cap_change_24h: number;\n            percent_change_1h: number;\n            percent_change_1y: number;\n            percent_change_6h: number;\n            percent_change_7d: number;\n            percent_change_12h: number;\n            percent_change_15m: number;\n            percent_change_24h: number;\n            percent_change_30d: number;\n            percent_change_30m: number;\n            percent_from_price_ath: number;\n            price: number;\n            volume_24h: number;\n            volume_24h_change_24h: number;\n        };\n    };\n}\n\nfunction Price() {\n    const { coinId } = useParams<{coinId: string}>();\n    const {isLoading, data} = useQuery<PriceData>([\"tickers\", coinId], () => fetchCoinTickers(coinId));\n    return (\n        <Container>\n            {isLoading ? \"Loading...\" :\n                <PriceWrapper>\n                    <PriceItem>\n                        <span>Price : </span>\n                        <span>{data?.quotes.USD.ath_price}</span>\n                    </PriceItem>\n                    <PriceItem>\n                        <span>percent_change_7d : </span>\n                        <span>{data?.quotes.USD.percent_change_7d}</span>\n                    </PriceItem>\n                    <PriceItem>\n                        <span>percent_change_30m : </span>\n                        <span>{data?.quotes.USD.percent_change_30m}</span>\n                    </PriceItem>\n                </PriceWrapper>\n\n\n            }\n        </Container>\n    )\n}\n\nexport default Price;","import {useQuery} from \"react-query\";\nimport {fetchCoinHistory} from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface IHistorical {\n    time_open: string;\n    time_close: string;\n    open: number;\n    high: number;\n    low: number;\n    close: number;\n    volume: number;\n    market_cap: number;\n}\n\ninterface ChartProps {\n    coinId?: string;\n}\n\ninterface IPrice {\n    x: string,\n    y: object,\n}\n\nfunction Chart({coinId} : ChartProps) {\n    const {isLoading, data} = useQuery<IHistorical[]>([\"ohlcv\", coinId], () => fetchCoinHistory(coinId),{\n        refetchInterval: 1000000,\n    })\n    const priceArray: IPrice[] = [];\n    data?.forEach(item => {\n        priceArray.push(\n            {\n                x: item.time_close,\n                y: [item.open, item.high, item.low, item.close],\n            }\n        )\n    });\n\n    console.log(priceArray)\n\n    return <div>{isLoading ? \"Loading chart...\" :\n        <ApexChart\n            type=\"candlestick\"\n            series={[{\n                data: priceArray\n            }]}\n            options={{\n                chart: {\n                    height: 350\n                },\n                tooltip: {\n                    enabled: false,\n                    x: {\n                        show: false,\n                        format: 'dd MMM',\n                        formatter: undefined,\n                    },\n                    y: {\n                        formatter: undefined,\n                        title: {\n                            formatter: (seriesName) => seriesName,\n                        },\n                    },\n                    fixed: {\n                        enabled: false\n                    }\n                },\n                title: {\n                    text: 'CandleStick Chart',\n                    align: 'left'\n                },\n                xaxis: {\n                    type: 'datetime',\n                    labels: {\n                        show: true,\n                        rotate: -45,\n                        rotateAlways: false,\n                        hideOverlappingLabels: true,\n                        showDuplicates: false,\n                        trim: false,\n                        minHeight: undefined,\n                        maxHeight: 120,\n                        style: {\n                            colors: [\"white\"],\n                            fontSize: '12px',\n                        },\n                    },\n                },\n                yaxis: {\n                    tooltip: {\n                        enabled: false\n                    },\n                    labels: {\n                        show: true,\n                        align: 'right',\n                        minWidth: 0,\n                        maxWidth: 160,\n                        style: {\n                            colors: [\"white\"],\n                            fontSize: '12px',\n                            fontFamily: 'Helvetica, Arial, sans-serif',\n                            fontWeight: 400,\n                            cssClass: 'apexcharts-yaxis-label',\n                        },\n                        offsetX: 0,\n                        offsetY: 0,\n                        rotate: 0,\n                        formatter: (value) => { return value.toFixed(2) },\n                    },\n                    axisBorder: {\n                        show: true,\n                        color: '#78909C',\n                        offsetX: 0,\n                        offsetY: 0\n                    },\n                },\n            }}\n\n        />\n    }</div>\n}\n\nexport default Chart;\n","import {Link, Route, Routes, useLocation, useMatch, useParams} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {useEffect, useState} from \"react\";\nimport Price from \"./Price\";\nimport Chart from \"./Chart\";\nimport {useQuery} from \"react-query\";\nimport {fetchCoinInfo, fetchCoinTickers} from \"../api\";\nimport {Helmet} from \"react-helmet\";\n\nconst Title = styled.h1`\n  font-size: 48px;\n  margin: 0 auto;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.div`\ntext-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  div:first-child {\n    margin-right: auto;\n  }\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: black;\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${props => props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n  }\n`;\ninterface RouteParams {\n    coinId: string\n}\n\ninterface InfoData {\n    id: string;\n    name: string;\n    symbol: string;\n    rank: number;\n    is_new: boolean;\n    is_active: boolean;\n    type: string;\n    description: string;\n    message: string;\n    open_source: boolean;\n    development_status: string;\n    hardware_wallet: boolean;\n    proof_type: string;\n    org_structure: string;\n    hash_algorithm: string;\n    started_at: string; //ㅇㅇ\n    first_data_at: string; //\n    last_data_at: string; //\n}\ninterface PriceData {\n    id: string;\n    name: string;\n    symbol: string;\n    rank: number;\n    circulating_supply: number;\n    total_supply: number;\n    max_supply: number;\n    beta_value: number;\n    first_data_at: string;\n    last_updated: string;\n    quotes: {\n        USD: {\n            ath_date: string;\n            ath_price: number;\n            market_cap: number;\n            market_cap_change_24h: number;\n            percent_change_1h: number;\n            percent_change_1y: number;\n            percent_change_6h: number;\n            percent_change_7d: number;\n            percent_change_12h: number;\n            percent_change_15m: number;\n            percent_change_24h: number;\n            percent_change_30d: number;\n            percent_change_30m: number;\n            percent_from_price_ath: number;\n            price: number;\n            volume_24h: number;\n            volume_24h_change_24h: number;\n        };\n    };\n}\n\nfunction Coin() {\n    const { coinId } = useParams<{coinId: string}>();\n    const { state } = useLocation();\n    const priceMatch = useMatch('/:coinId/price');\n    const chartMatch = useMatch('/:coinId/chart');\n    const {isLoading: infoLoading, data: infoData} = useQuery<InfoData>([\"info\",coinId], () => fetchCoinInfo(coinId));\n    const {isLoading: tickersLoading, data: tickersData} = useQuery<PriceData>([\"tickers\",coinId], () => fetchCoinTickers(coinId),\n        {refetchInterval: 5000000,})\n    const loading = infoLoading || tickersLoading;\n    return (\n        <Container>\n            <Helmet>\n                <title>{state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}</title>\n            </Helmet>\n            <Header>\n                <Link to={'/'}>\n                    이전\n                </Link>\n                <Title>\n                    {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n                </Title>\n            </Header>\n            {loading ? <Loader>Loading...</Loader> : <div>\n                <Overview>\n                    <OverviewItem>\n                        <span>RANK:</span>\n                        <span>{infoData?.rank}</span>\n                    </OverviewItem>\n                    <OverviewItem>\n                        <span>SYMBOL:</span>\n                        <span>{infoData?.symbol}</span>\n                    </OverviewItem>\n                    <OverviewItem>\n                        <span>Price</span>\n                        <span>{tickersData?.quotes.USD.price}</span>\n                    </OverviewItem>\n                </Overview>\n                <Description>\n                    {infoData?.description}\n                </Description>\n                <Overview>\n                    <OverviewItem>TOTAL SUPPLY:\n                        <span>{tickersData?.total_supply}</span>\n                    </OverviewItem>\n                    <OverviewItem>MAX SUPPLY:\n                        <span>{tickersData?.max_supply}</span>\n                    </OverviewItem>\n                </Overview>\n\n                <Tabs>\n                    <Tab isActive={chartMatch !== null}>\n                        <Link to={`/${coinId}/chart`}>\n                            Chart\n                        </Link>\n                    </Tab>\n                    <Tab isActive={priceMatch !== null}>\n                        <Link to={`/${coinId}/price`}>\n                            price\n                        </Link>\n                    </Tab>\n                </Tabs>\n\n\n\n                <Routes>\n                    <Route path=\"chart\" element={<Chart coinId={coinId} />}/>\n                    <Route path=\"price\" element={<Price />}/>\n                </Routes>\n\n            </div>}\n\n        </Container>\n    )\n}\n\nexport default Coin;","import {BrowserRouter, Route, Routes} from \"react-router-dom\";\nimport Coins from \"./routes/Conins\";\nimport Coin from \"./routes/Coin\";\n\nfunction Router() {\n    return <BrowserRouter basename=\"/github-page\">\n        <Routes>\n            <Route path=\"/\" element={<Coins />}/>\n            <Route path=\"/:coinId/*\" element={<Coin />}/>\n        </Routes>\n    </BrowserRouter>\n}\n\nexport default Router;","import React from 'react';\nimport Router from \"./Router\";\nimport {createGlobalStyle} from \"styled-components\";\nimport {ReactQueryDevtools} from \"react-query/devtools\";\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\n\n  /* http://meyerweb.com/eric/tools/css/reset/\n     v5.0.1 | 20191019\n     License: none (public domain)\n  */\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, menu, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  main, menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure,\n  footer, header, hgroup, main, menu, nav, section {\n    display: block;\n  }\n  /* HTML5 hidden-attribute fix for newer browsers */\n  *[hidden] {\n      display: none;\n  }\n  body {\n    line-height: 1;\n  }\n  menu, ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-family: 'Source Sans Pro', sans-serif;\n    background-color: ${props => props.theme.bgColor};\n    color:${props => props.theme.textColor};\n  }\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n`\n\nfunction App() {\n  return (\n      <>\n          <GlobalStyle />\n          <Router />\n          <ReactQueryDevtools initialIsOpen={true} />\n      </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {ThemeProvider} from \"styled-components\";\nimport {theme} from \"./theme\";\nimport {QueryClient, QueryClientProvider} from \"react-query\";\n\nconst queryClient = new QueryClient()\n\nReactDOM.render(\n  <React.StrictMode>\n      <QueryClientProvider client={queryClient}>\n          <ThemeProvider theme={theme}>\n              <App />\n          </ThemeProvider>\n      </QueryClientProvider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);","import {DefaultTheme} from \"styled-components\";\n\nexport const theme:DefaultTheme = {\n    bgColor: \"#2f3640\",\n    textColor: \"#f5f6fa\",\n    accentColor: \"#44bd32\",\n}"],"sourceRoot":""}